<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Resource ModuleID="1" OwnerModuleID="1" ResRefID="103" Folder="\_Global\Plot Scripts\" ResRefName="gen00pt_backgrounds" IsCore="1" OwnerIsCore="1" Type="3" State="0" ObjectName="" Relationship="" ResType="nss" URI="bw-db://.\BWDATOOLSET/bw_dragonage_content\gen00pt_backgrounds.nss?moduleid=1&amp;resrefid=103" Requested="0">
	<Agent type="empty">
		<ResRefName>gen00pt_backgrounds</ResRefName>
		<LocalCopy type="bool">False</LocalCopy>
		<text>// Backgrounds plot

#include "plt_gen00pt_class_race_gend"
#include "plt_gen00pt_backgrounds"

#include "log_h"
#include "utility_h"
#include "wrappers_h"
#include "plot_h"


int StartingConditional()
{
    event eParms = GetCurrentEvent();                // Contains all input parameters
    int nType = GetEventType(eParms);               // GET or SET call
    string strPlot = GetEventString(eParms, 0);         // Plot GUID
    int nFlag = GetEventInteger(eParms, 1);          // The bit flag # being affected
    object oParty = GetEventCreator(eParms);      // The owner of the plot table for this script
    object oConversationOwner = GetEventObject(eParms, 0); // Owner on the conversation, if any
    int nResult = FALSE; // used to return value for DEFINED GET events
    object oPC = GetHero();

    plot_GlobalPlotHandler(eParms); // any global plot operations, including debug info

    if(nType == EVENT_TYPE_SET_PLOT) // actions -&gt; normal flags only
    {
        int nValue = GetEventInteger(eParms, 2);        // On SET call, the value about to be written (on a normal SET that should be '1', and on a 'clear' it should be '0')
        int nOldValue = GetEventInteger(eParms, 3);     // On SET call, the current flag value (can be either 1 or 0 regardless if it's a set or clear event)
        // IMPORTANT: The flag value on a SET event is set only AFTER this script finishes running!
        switch(nFlag)
        {

            case GEN_BACK_DWARF_COMMONER:
            {
                break;
            }
            case GEN_BACK_DWARF_NOBLE:
            {
                break;
            }

        }
     }
     else // EVENT_TYPE_GET_PLOT -&gt; defined conditions only
     {

        switch(nFlag)
        {
            case GEN_BACK_CIRCLE_HUMAN:
            {
                if(WR_GetPlotFlag( PLT_GEN00PT_CLASS_RACE_GEND, GEN_RACE_HUMAN) &amp;&amp;
                    WR_GetPlotFlag( strPlot, GEN_BACK_CIRCLE))
                    nResult = TRUE;
                break;
            }
            case GEN_BACK_CIRCLE_ELF:
            {
                if(WR_GetPlotFlag( PLT_GEN00PT_CLASS_RACE_GEND, GEN_RACE_ELF) &amp;&amp;
                    WR_GetPlotFlag( strPlot, GEN_BACK_CIRCLE))
                    nResult = TRUE;
                break;
            }

            case GEN_BACK_FERELDEN_NATIVE:              // Check to see if the player is a native of the human kingdom
            {
                int bCondition1, nCount;
                if (WR_GetPlotFlag(PLT_GEN00PT_BACKGROUNDS, GEN_BACK_CIRCLE)) nCount++;
                if (WR_GetPlotFlag(PLT_GEN00PT_BACKGROUNDS, GEN_BACK_ELF_CITY)) nCount++;
                if (WR_GetPlotFlag(PLT_GEN00PT_BACKGROUNDS, GEN_BACK_HUMAN_COMMONER)) nCount++;
                if (WR_GetPlotFlag(PLT_GEN00PT_BACKGROUNDS, GEN_BACK_HUMAN_NOBLE)) nCount++;

                if (nCount != 0) bCondition1 = TRUE;
                nResult = bCondition1;
                break;
            } 
            case GEN_BACK_ELF_CITY_FEMALE:
            {
                int nCityElf = WR_GetPlotFlag(PLT_GEN00PT_BACKGROUNDS, GEN_BACK_ELF_CITY);
                int nFemale = WR_GetPlotFlag(PLT_GEN00PT_CLASS_RACE_GEND, GEN_GENDER_FEMALE);
                if((nCityElf == TRUE) &amp;&amp; (nFemale == TRUE))
                {
                    nResult = TRUE;
                }
                break;
            }

        }

    }
    plot_OutputDefinedFlag(eParms, nResult);

    return nResult;
}</text>
	</Agent>
</Resource>
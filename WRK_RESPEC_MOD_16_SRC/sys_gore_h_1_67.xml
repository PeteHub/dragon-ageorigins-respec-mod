<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Resource ModuleID="1" OwnerModuleID="1" ResRefID="67" Folder="\_Systems\_Includes\" ResRefName="sys_gore_h" IsCore="1" OwnerIsCore="1" Type="3" State="0" ObjectName="" Relationship="" ResType="nss" URI="bw-db://.\BWDATOOLSET/bw_dragonage_content\sys_gore_h.nss?moduleid=1&amp;resrefid=67" Requested="0">
	<Agent type="empty">
		<ResRefName>sys_gore_h</ResRefName>
		<LocalCopy type="bool">False</LocalCopy>
		<text>// -----------------------------------------------------------------------------
// gore_h - Gore related function include
// -----------------------------------------------------------------------------
/*
            Gore System, Brief Technical Overview

    Gore is handled by the engine on a per creature basis and modified via the
    SetCreatureGoreLevel(float fLevel) engine command.

    fLevel ranges between 0.0 (no gore) and 1.0 (max gore)

    Unless the game plot calls for it, gore handling in the game is transparent,
    handled by EffectDamage, if created with DAMAGE_FLAG_UPDATE_GORE.


*/
// -----------------------------------------------------------------------------
// georg@2006/12/01
// -----------------------------------------------------------------------------


#include "log_h"

const float GORE_CHANGE_HIT        =  0.001f; // 1000 hits equal full gore
const float GORE_CHANGE_CRITICAL   =  0.005f;  // 50 hits equal full gore
const float GORE_CHANGE_DEATHBLOW  =  0.010f;


/** ----------------------------------------------------------------------------
* @brief Modifies the GoreLevel on a Creature by fGoreChange
*        GoreLevel ranges from 0.0(no gore) to 1.0 (max gore), any excess values
*        are clipped.
*
*       Predefined values:
*                const float GORE_CHANGE_HIT        =  0.01f;
*                const float GORE_CHANGE_CRITICAL   =  0.15f;
*                const float GORE_CHANGE_DEATHBLOW  =  0.25f;
*
* @param oCreature    The creature who gets the gore level upgrade
* @param fGoreChange  The amount by which to increase or decrease the gore level
*
* @author   Georg Zoeller
*  -----------------------------------------------------------------------------
**/
void Gore_ModifyGoreLevel(object oCreature, float fGoreChange);
void Gore_ModifyGoreLevel(object oCreature, float fGoreChange)
{
    if (!GetM2DAInt(TABLE_APPEARANCE,"bDisableGore",GetAppearanceType(oCreature)))
    {
        float fCurrentGore = GetCreatureGoreLevel(oCreature);

        if (GetCreatureGoreLevel(oCreature) &lt;0.6f)
        {
            fCurrentGore += fGoreChange;
            if(fCurrentGore &gt; 1.0)
                fCurrentGore = 1.0;
            else if(fCurrentGore &lt; 0.0)
                fCurrentGore = 0.0;
            SetCreatureGoreLevel(oCreature, fCurrentGore);  
            #ifdef DEBUG
            Log_Trace_Combat("gore_h.Gore_ModifyGoreLevel","gore changed to: " + FloatToString(fCurrentGore),OBJECT_INVALID, oCreature, LOG_CHANNEL_COMBAT_GORE);
            #endif
        }
    }
}


/** ----------------------------------------------------------------------------
* @brief Removes all gore from the specified creature
* @param oCreature    The creature who gets cleaned
*
* @author   Georg Zoeller
*  -----------------------------------------------------------------------------
**/
void Gore_RemoveAllGore(object oCreature);
void Gore_RemoveAllGore(object oCreature)
{
    SetCreatureGoreLevel(oCreature,0.0);
}</text>
	</Agent>
</Resource>